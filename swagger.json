{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "BeckEnd Test Smartlink",
        "description": "My BeckEnd Test While Apllied a Job for BeckEnd Developer on Smartlink",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:5000",
    "basePath": "/",
    "tags": [{
        "name": "Register",
        "description": "API for Register in the system"
    }],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Token": {
            "description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },






    "paths": {
        "/register": {
            "get": {
                "tags": [
                    "Register"
                ],
                "summary": "Get all register in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Register"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Register"
                ],
                "description": "Create new register in system",
                "parameters": [{
                    "name": "register",
                    "in": "body",
                    "description": "Register that we want to create",
                    "schema": {
                        "$ref": "#/definitions/Register"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New Register is created",
                        "schema": {
                            "$ref": "#/definitions/Register"
                        }
                    }
                }
            }
        },

        "/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "description": "Login in system",
                "parameters": [{
                    "name": "login",
                    "in": "body",
                    "description": "Login for the system",
                    "schema": {
                        "$ref": "#/definitions/Login"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Login apllied",
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                }
            }
        },

        "/layanan": {
            "post": {
                "tags": [
                    "Layanan"
                ],
                "description": "Layanan in system",
                "parameters": [{
                    "name": "Layanan",
                    "in": "body",
                    "description": "Layanan for the system",
                    "schema": {
                        "$ref": "#/definitions/Layanan"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Layanan apllied",
                        "schema": {
                            "$ref": "#/definitions/Layanan"
                        }
                    }
                },
                "securityDefinitions": {
                    "JWT": {
                        "type": "apiKey",
                        "in": "query",
                        "name": "access_token"
                    }
                },
                "responses": {
                    "UnauthorizedError": {
                        "description": "Access token is missing or invalid"
                    }
                },
                "security": [{
                    "Token": []
                }]
            }
        },

        "/transaksi": {
            "post": {
                "tags": [
                    "Transaksi"
                ],
                "description": "Transaksi in system",
                "parameters": [{
                    "name": "Transaksi",
                    "in": "body",
                    "description": "Transaksi for the system",
                    "schema": {
                        "$ref": "#/definitions/Transaksi"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Transaksi apllied",
                        "schema": {
                            "$ref": "#/definitions/Transaksi"
                        }
                    }
                },
                "securityDefinitions": {
                    "JWT": {
                        "type": "apiKey",
                        "in": "query",
                        "name": "access_token"
                    }
                },
                "responses": {
                    "UnauthorizedError": {
                        "description": "Access token is missing or invalid"
                    }
                },
                "security": [{
                    "Token": []
                }]
            }
        }

    }





}